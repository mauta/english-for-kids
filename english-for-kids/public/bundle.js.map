{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/block/burger.js","webpack:///./src/block/card.js","webpack:///./src/block/extcontrol.js","webpack:///./src/block/feild.js","webpack:///./src/block/game_panel.js","webpack:///./src/block/lose.js","webpack:///./src/block/menu.js","webpack:///./src/block/menu_card.js","webpack:///./src/block/score.js","webpack:///./src/block/score_field.js","webpack:///./src/block/toggle.js","webpack:///./src/block/win.js","webpack:///./src/main.js","webpack:///./src/utils/control.js","webpack:///./src/utils/sort.js","webpack:///./src/utils/storage.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAuC;;AAExB,qBAAqB,sDAAO;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AACuC;AAGb;AACE;;AAEb,mBAAmB,sDAAO;AACzC;AACA;AACA,uBAAuB,sDAAO;AAC9B,gEAAgE,YAAY,aAAa,YAAY;AACrG,2BAA2B,YAAY;AACvC,qBAAqB,sDAAO;AAC5B;AACA,6BAA6B,sDAAO;AACpC,gEAAgE,YAAY,aAAa,YAAY;AACrG,2BAA2B,YAAY;AACvC,oBAAoB,sDAAO;AAC3B;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA,qBAAqB,8CAAK;AAC1B,2BAA2B,0DAAG;;AAE9B;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AACuC;;AAExB,yBAAyB,sDAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACuC;AACb;AACW;AACb;AACE;AACE;AAGF;;AAEX,oBAAoB,sDAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAAK;AAC1B,2BAA2B,0DAAG;AAC9B;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,6CAAI;AACzB;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,mDAAS;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,uCAAuC,4CAAG,6BAA6B,6CAAI;AAC3E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAAA;AACuC;;AAExB,wBAAwB,sDAAO;AAC9C;AACA;AACA,wBAAwB,sDAAO;AAC/B,mBAAmB,sDAAO;AAC1B,yBAAyB,sDAAO;AAChC;;AAEA;AACA;AACA,0BAA0B,sDAAO;AACjC;AACA,KAAK;AACL,0BAA0B,sDAAO;AACjC;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAuC;;AAExB,mBAAmB,sDAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,QAAQ,sDAAO,oCAAoC,YAAY,eAAe,cAAc;AAC5F;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACuC;AACD;AACR;;AAEf,mBAAmB,sDAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,sDAAO;AACjC,sBAAsB,+CAAM;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,mDAAU;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAA;AACuC;;AAExB,uBAAuB,sDAAO;AAC7C;AACA,gDAAgD,WAAW,SAAS,WAAW;AAC/E,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAG0B;;AAEX;AACf;AACA;AACA;;AAEA;AACA,qBAAqB,0DAAG;AACxB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,0DAAG;AACP;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAuC;AAIb;;AAEY;;AAEvB,yBAAyB,sDAAO;AAC/C;AACA;AACA,yBAAyB,sDAAO;AAChC,0BAA0B,sDAAO;AACjC,0BAA0B,sDAAO;AACjC,8BAA8B,sDAAO;AACrC,iCAAiC,sDAAO;AACxC,+BAA+B,sDAAO;AACtC,+BAA+B,sDAAO;AACtC,8BAA8B,sDAAO;AACrC,8BAA8B,sDAAO;AACrC,gCAAgC,sDAAO;AACvC,gCAAgC,sDAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAO;AAChC,0BAA0B,0DAAG;;AAE7B,mDAAmD,2DAAS;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,6DAA6D,SAAS;AACtE,wCAAwC,OAAO;AAC/C,wCAAwC,OAAO;AAC/C,sCAAsC,MAAM;AAC5C,sCAAsC,MAAM;AAC5C,wCAAwC,QAAQ;AAChD,wCAAwC,QAAQ;AAChD,YAAY,sDAAO;AACnB,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA,qDAAqD,2DAAS;AAC9D;AACA,KAAK;;AAEL;AACA;AACA;AACA,qDAAqD,2DAAS;AAC9D;AACA,KAAK;;AAEL;AACA;AACA;AACA,qDAAqD,2DAAS;AAC9D;AACA,KAAK;;AAEL;AACA;AACA;AACA,qDAAqD,2DAAS;AAC9D;AACA,KAAK;;AAEL;AACA;AACA;AACA,qDAAqD,2DAAS;AAC9D;AACA,KAAK;;AAEL;AACA;AACA;AACA,qDAAqD,2DAAS;AAC9D;AACA,KAAK;;AAEL;AACA;AACA;AACA,qDAAqD,2DAAS;AAC9D;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP,MAAM,0DAAG;AACT;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AC3HA;AAAA;AAAA;AAAA;AACuC;;AAExB,qBAAqB,sDAAO;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAuC;;AAExB,kBAAkB,sDAAO;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACgC;AACM;AACG;AACL;AACF;AACW;AAIpB;AACY;;AAErC;AACA;AACA,qBAAqB,sDAAO;AAC5B,mBAAmB,qDAAM;AACzB,mBAAmB,sDAAO;AAC1B,mBAAmB,mDAAI;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;;AAEA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,GAAG,0DAAG,oBAAoB,0DAAG;;AAE7B,oBAAoB,oDAAK;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA,cAAc,wDAAQ;AACtB;AACA;AACA;AACA;AACA,+BAA+B,0DAAG;AAClC;AACA,uGAAuG,2DAAS;AAChH;AACA;AACA,SAAS;AACT;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAU;AACtB;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;;;;;;;;;;;;AClID;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAe;AACf;AACA;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACO;AACP;AACA;;AAEO;AACP;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","import Control from '../utils/control';\n\nexport default class Burger extends Control {\n  constructor(parentNode, className = '') {\n    const inner = '<button class=\"btn-burger\" type=\"button\" aria-label=\"menu\"><span class=\"btn-burger-line\"></span></button>';\n    super(parentNode, 'div', className, inner);\n    this.isChecked = false;\n    this.className = className;\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport Control from '../utils/control';\nimport {\n  get,\n} from '../utils/storage';\nimport Score from './score';\n\nexport default class Card extends Control {\n  constructor(parentNode, className = '', data, mode) {\n    super(parentNode, 'div', className);\n    this.flipper = new Control(this.node, 'div', 'flipper');\n    const frontInner = `<img class=\"card-img\" src=\"assets/img/${data.enWord}.png\" alt=\"${data.enWord}\">\n    <span class=\"enWord\">${data.enWord}</span>`;\n    this.front = new Control(this.flipper.node, 'div', 'front', frontInner);\n    const btnInner = '<img src=\"./assets/img/reload.svg\" alt=\"turn over\" width=\"29\" hight=\"29\">';\n    this.bntChangeling = new Control(this.front.node, 'button', 'btn-changeling', btnInner);\n    const backInner = ` <img class=\"card-img\" src=\"assets/img/${data.enWord}.png\" alt=\"${data.enWord}\">\n    <span class=\"ruWord\">${data.ruWord}</span>`;\n    this.back = new Control(this.flipper.node, 'div', 'back', backInner);\n    this.isChecked = false;\n    this.className = className;\n    this.isPlayMode = mode;\n    this.audio = new Audio();\n    this.audio.src = `assets/sound/${data.enWord}.mp3`;\n    this.enWord = data.enWord;\n    this.try = '';\n    this.score = new Score();\n    this.score.dashboard = get('score_mauta');\n\n    if (this.isPlayMode) {\n      this.node.classList.add('flipper--play');\n      this.node.addEventListener('click', () => {\n        this.try = this.enWord;\n      });\n    } else {\n      this.bntChangeling.node.addEventListener('click', (e) => {\n        e.stopPropagation();\n        this.node.classList.add('active');\n        this.score.load(this.enWord, 'train');\n      });\n\n      this.node.addEventListener('mouseleave', () => {\n        this.node.classList.remove('active');\n      });\n\n      this.front.node.addEventListener('click', () => {\n        this.audio.currentTime = 0;\n        this.audio.play();\n        this.score.load(this.enWord, 'train');\n      });\n    }\n  }\n\n  playSound() {\n    this.audio.currentTime = 0;\n    this.audio.play();\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport Control from '../utils/control';\n\nexport default class ExtControl extends Control {\n  constructor(parentNode, className = '', className2 = '', content = '', bgrImg = '', onclick) {\n    super(parentNode, 'div', className, content, bgrImg);\n    this.isChecked = false;\n    this.className = className;\n    this.className2 = className2;\n    this.bgrImg = bgrImg;\n    this.onClick = onclick;\n\n    this.node.onclick = () => {\n      this.changeState();\n      this.onClick && this.onClick(this.isChecked);\n    };\n  }\n\n  changeState(newState) {\n    this.isChecked = newState !== undefined ? newState : !this.isChecked;\n    this.node.className = this.isChecked ? this.className2 : this.className;\n  }\n}\n","/* eslint-disable max-len */\nimport Control from '../utils/control';\nimport Card from './card';\nimport GamePanel from './game_panel';\nimport Win from './win';\nimport Lose from './lose';\nimport Score from './score';\nimport {\n  get,\n} from '../utils/storage';\n\nexport default class Feild extends Control {\n  constructor(parentNode, className = '', modeStatus) {\n    super(parentNode, 'div', className, '');\n    this.modeStatus = modeStatus;\n    this.cards = [];\n    this.wrongCounter = 0;\n    this.attempCounter = 0;\n    this.score = new Score();\n    this.score.dashboard = get('score_mauta');\n    this.onClickHardWords = () => {};\n    this.hardWords = [];\n    this.hardKeys = [];\n  }\n\n  addItem(ourCategoryData) {\n    const card = new Card(this.node, 'flip-container', ourCategoryData, this.modeStatus);\n    this.cards.push(card);\n  }\n\n  playMode() {\n    this.wrongCounter = 0;\n    this.attempCounter = 0;\n    const gamePanel = new GamePanel(this.node);\n    const errAudio = new Audio();\n    errAudio.src = 'assets/sound/error.mp3';\n    const rightAudio = new Audio();\n    rightAudio.src = 'assets/sound/right.mp3';\n    const cardsShuffled = this.cards.sort(() => Math.random() - 0.5);\n\n    let i = 0;\n    let item = cardsShuffled[i];\n\n    const playGame = () => {\n      this.cards.forEach((element) => {\n        element.node.classList.add('flip-container-disabled');\n      });\n      item = cardsShuffled[i];\n      item.playSound();\n      item.audio.addEventListener('ended', () => {\n        this.cards.forEach((element) => {\n          element.node.classList.remove('flip-container-disabled');\n        });\n      });\n    };\n\n    gamePanel.btn.node.addEventListener('click', () => {\n      playGame();\n      gamePanel.btn.node.style.backgroundImage = \"url('../assets/img/repiat.svg')\";\n    });\n\n    this.cards.forEach((element) => {\n      element.node.addEventListener('click', () => {\n        this.attempCounter += 1;\n        if (item.enWord === element.enWord) {\n          this.score.load(item.enWord, 'right');\n          element.node.style.opacity = '0.8';\n          rightAudio.currentTime = 0;\n          rightAudio.play();\n          gamePanel.addAchieve(true);\n          element.node.style.pointerEvents = 'none';\n          i += 1;\n          if (i < this.cards.length) {\n            setTimeout(playGame, 1500);\n          } else {\n            (!this.wrongCounter) ? new Win(this.node).winStart() : new Lose(this.node, [this.wrongCounter, this.attempCounter]).loseStart();\n          }\n        } else {\n          this.score.load(item.enWord, 'mistake');\n          this.wrongCounter += 1;\n          gamePanel.addAchieve(false);\n          errAudio.play();\n        }\n      });\n    });\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport Control from '../utils/control';\n\nexport default class GamePanel extends Control {\n  constructor(parentNode) {\n    super(parentNode, 'div', 'game-panel');\n    this.leftSide = new Control(this.node, 'div', 'left-side');\n    this.btn = new Control(this.node, 'button', 'btn-play', 'Play');\n    this.rightSide = new Control(this.node, 'div', 'right-side');\n  }\n\n  addAchieve(isRight) {\n    if (isRight) {\n      const achieve = new Control(this.rightSide.node, 'div', 'achieve');\n      achieve.node.style.backgroundImage = \"url('assets/img/right.png')\";\n    } else {\n      const achieve = new Control(this.leftSide.node, 'div', 'achieve');\n      achieve.node.style.backgroundImage = \"url('assets/img/wrong.png')\";\n    }\n  }\n}\n","import Control from '../utils/control';\n\nexport default class Lose extends Control {\n  constructor(parentNode, data) {\n    super(parentNode, 'div', 'popup-lose', '<h2 class=\"popup-title\">Sometimes you <span>win</span> sometimes you <span>learn</span> </h2>');\n    this.audio = new Audio();\n    this.audio.src = 'assets/sound/lose.mp3';\n    this.errors = data[0];\n    this.attempts = data[1];\n  }\n\n  loseStart() {\n    this.audio.currentTime = 0;\n    this.audio.play();\n    setTimeout(() => {\n      location.hash = 'menu';\n    }, 5000);\n    new Control(this.node, 'span', 'lose-info', `${this.errors} mistakes of ${this.attempts} attempts`);\n  }\n}\n","/* eslint-disable max-len */\n/* eslint-disable no-unused-expressions */\nimport Control from '../utils/control';\nimport ExtControl from './extcontrol';\nimport Burger from './burger';\n\nexport default class Menu extends Control {\n  constructor(parentNode, className = '', itemClassName = '', itemClassNameSelected = '') {\n    super(parentNode, 'div', className, '');\n    this.className = className;\n    this.itemClassName = itemClassName;\n    this.itemClassNameSelected = itemClassNameSelected;\n    this.content = [];\n    this.arr = [];\n    this.onChange = () => {};\n    this.transLayer = new Control(this.node, 'div', 'transLayer');\n    this.burger = new Burger(this.node, 'burger');\n\n    this.transLayer.node.onclick = () => {\n      this.burger.node.classList.remove('is-active');\n      this.node.classList.remove('menu-active');\n      this.transLayer.node.style.display = 'none';\n    };\n\n    this.burger.node.onclick = () => {\n      if (this.burger.node.classList.contains('is-active')) {\n        this.burger.node.classList.remove('is-active');\n        this.node.classList.remove('menu-active');\n        this.transLayer.node.style.display = 'none';\n      } else {\n        this.transLayer.node.style.display = 'block';\n        this.burger.node.classList.add('is-active');\n        this.node.classList.add('menu-active');\n      }\n    };\n  }\n\n  addItem(content, url) {\n    const elem = new ExtControl(this.node, this.itemClassName, this.itemClassNameSelected, content, url, () => {\n      this.select(this.arr.indexOf(elem));\n      this.burger.node.classList.remove('is-active');\n      this.node.classList.remove('menu-active');\n      this.transLayer.node.style.display = 'none';\n    });\n    this.content.push(content);\n    this.arr.push(elem);\n  }\n\n  select(ind) {\n    this.arr.forEach((item) => {\n      item.changeState(false);\n    });\n\n    this.arr[ind] && this.arr[ind].changeState(true);\n    this.onChange(ind, this.arr[ind]);\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport Control from '../utils/control';\n\nexport default class MenuCard extends Control {\n  constructor(parentNode, className = '', className2 = '', dataArr) {\n    const inner = `<img class=\"card-img\" src=\"${dataArr[1]}\" alt=\"${dataArr[0]}\">\n    <span class=\"enWord\">${dataArr[0]}</span>`;\n    super(parentNode, 'div', className, inner);\n    this.isChecked = false;\n    this.className = className;\n    this.className2 = className2;\n\n    this.node.onclick = () => {\n      const choice = dataArr[0];\n      location.hash = choice;\n    };\n  }\n}\n","import {\n  set,\n  get,\n} from '../utils/storage';\n\nexport default class Score {\n  constructor() {\n    this.dashboard = [];\n  }\n\n  load(word, localKey) {\n    this.dashboard = get('score_mauta');\n    this.dashboard.forEach((el) => {\n      if (el.enWord === word) {\n        el[localKey] += 1;\n        el.procent = +((el.right * 100) / (el.right + el.mistake)).toFixed(1) || 0;\n      }\n    });\n    set('score_mauta', this.dashboard);\n  }\n}\n","import Control from '../utils/control';\nimport {\n  get,\n  set,\n} from '../utils/storage';\n\nimport sortByKey from '../utils/sort';\n\nexport default class ScoreFeild extends Control {\n  constructor(parent) {\n    super(parent.node, 'h2', 'score__title', 'Score');\n    this.scoreBtns = new Control(parent.node, 'div', 'score__btns');\n    this.scoreTrain = new Control(this.scoreBtns.node, 'button', 'score__train', 'Train hard');\n    this.scoreReset = new Control(this.scoreBtns.node, 'button', 'score__reset', 'Reset');\n    this.dashboardTitle = new Control(parent.node, 'div', 'dashboard__title');\n    this.dashboardCategory = new Control(this.dashboardTitle.node, 'button', 'dashboard__category', 'Category');\n    this.dashboardEnWord = new Control(this.dashboardTitle.node, 'button', 'dashboard__en-word', 'Word');\n    this.dashboardRuWord = new Control(this.dashboardTitle.node, 'button', 'dashboard__translation', 'Translate');\n    this.dashboardTrain = new Control(this.dashboardTitle.node, 'button', 'dashboard__train', 'Trained');\n    this.dashboardRight = new Control(this.dashboardTitle.node, 'button', 'dashboard__right', 'Correct');\n    this.dashboardMistake = new Control(this.dashboardTitle.node, 'button', 'dashboard__mistake', 'Incorrect');\n    this.dashboardProcent = new Control(this.dashboardTitle.node, 'button', 'dashboard__procent', 'Progress');\n    this.categorySort = true;\n    this.enWordSort = false;\n    this.ruWordSort = false;\n    this.trainSort = false;\n    this.rightSort = false;\n    this.mistakeSort = false;\n    this.procentSort = false;\n    this.dashboard = new Control(parent.node, 'div', 'dashboard');\n    this.dashboardScore = get('score_mauta');\n\n    this.dashboardScore = this.dashboardScore.sort(sortByKey('category'));\n\n    const render = () => {\n      this.dashboardScore.forEach((item) => {\n        const {\n          enWord,\n          ruWord,\n          category,\n          train,\n          right,\n          mistake,\n          procent,\n        } = item;\n        const dashLine = `<div class=\"dashboard__category\">${category}</div>\n      <div class=\"dashboard__en-word\">${enWord}</div>\n      <div class=\"dashboard__ru-word\">${ruWord}</div>\n      <div class=\"dashboard__train\">${train}</div>\n      <div class=\"dashboard__right\">${right}</div>\n      <div class=\"dashboard__mistake\">${mistake}</div>\n      <div class=\"dashboard__procent\">${procent} %</div>`;\n        new Control(this.dashboard.node, 'div', 'dashboard__line', dashLine);\n      });\n    };\n\n    render();\n\n    this.dashboardCategory.node.addEventListener('click', () => {\n      this.dashboard.clear();\n      this.categorySort = !this.categorySort;\n      this.dashboardScore = this.dashboardScore.sort(sortByKey('category', this.categorySort));\n      render();\n    });\n\n    this.dashboardEnWord.node.addEventListener('click', () => {\n      this.dashboard.clear();\n      this.enWordSort = !this.enWordSort;\n      this.dashboardScore = this.dashboardScore.sort(sortByKey('enWord', this.enWordSort));\n      render();\n    });\n\n    this.dashboardRuWord.node.addEventListener('click', () => {\n      this.dashboard.clear();\n      this.ruWordSort = !this.ruWordSort;\n      this.dashboardScore = this.dashboardScore.sort(sortByKey('ruWord', this.ruWordSort));\n      render();\n    });\n\n    this.dashboardTrain.node.addEventListener('click', () => {\n      this.dashboard.clear();\n      this.trainSort = !this.trainSort;\n      this.dashboardScore = this.dashboardScore.sort(sortByKey('train', this.trainSort));\n      render();\n    });\n\n    this.dashboardRight.node.addEventListener('click', () => {\n      this.dashboard.clear();\n      this.rightSort = !this.rightSort;\n      this.dashboardScore = this.dashboardScore.sort(sortByKey('right', this.rightSort));\n      render();\n    });\n\n    this.dashboardMistake.node.addEventListener('click', () => {\n      this.dashboard.clear();\n      this.mistakeSort = !this.mistakeSort;\n      this.dashboardScore = this.dashboardScore.sort(sortByKey('mistake', this.mistakeSort));\n      render();\n    });\n\n    this.dashboardProcent.node.addEventListener('click', () => {\n      this.dashboard.clear();\n      this.procentSort = !this.procentSort;\n      this.dashboardScore = this.dashboardScore.sort(sortByKey('procent', this.procentSort));\n      render();\n    });\n\n    this.scoreReset.node.addEventListener('click', () => {\n      this.dashboard.clear();\n      this.dashboardScore.forEach((item) => {\n        item.train = 0;\n        item.right = 0;\n        item.mistake = 0;\n      });\n\n      set('score_mauta', this.dashboardScore);\n      render();\n    });\n\n    this.scoreTrain.node.addEventListener('click', () => {\n      location.hash = 'hard-words';\n    });\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport Control from '../utils/control';\n\nexport default class Toggle extends Control {\n  constructor(parentNode, className = '') {\n    const inner = '<div class=\"button\" id=\"button-11\"><input type=\"checkbox\" class=\"checkbox\"><div class=\"knobs\"><span></span></div> <div class=\"layer\"></div></div>';\n    super(parentNode, 'div', className, inner);\n    this.isChecked = false;\n    this.className = className;\n\n    this.node.onclick = () => {\n      this.isChecked = !this.isChecked;\n      const root = document.querySelector(':root');\n      if (this.isChecked) {\n        root.style.setProperty('--bg-color', '#CDFFA6');\n        root.style.setProperty('--hover-color', '#59A61E');\n        root.style.setProperty('--select-color', '#8CBF64');\n      } else {\n        root.style.setProperty('--bg-color', '#ebf7fc');\n        root.style.setProperty('--hover-color', '#03a9f4');\n        root.style.setProperty('--select-color', '#74cef8');\n      }\n    };\n  }\n}\n","import Control from '../utils/control';\n\nexport default class Win extends Control {\n  constructor(parentNode) {\n    super(parentNode, 'div', 'popup-win', '<img src = \"assets/img/win.png\" >');\n    this.audio = new Audio();\n    this.audio.src = 'assets/sound/win.mp3';\n  }\n\n  winStart() {\n    this.audio.currentTime = 0;\n    this.audio.play();\n    setTimeout(() => {\n      location.hash = 'menu';\n    }, 5000);\n  }\n}\n","/* eslint-disable no-case-declarations */\n/* eslint-disable no-new */\n/* eslint-disable no-restricted-globals */\nimport Menu from './block/menu';\nimport Control from './utils/control';\nimport MenuCard from './block/menu_card';\nimport Toggle from './block/toggle';\nimport Field from './block/feild';\nimport ScoreFeild from './block/score_field';\nimport {\n  get,\n  set,\n} from './utils/storage';\nimport sortByKey from './utils/sort';\n\nfetch('../assets/data.json').then((res) => res.json()).then((json) => {\n  const COUNT_CARDS = 8;\n  const header = new Control(document.body, 'header', 'header', '<h1>English for kids </h1>');\n  const mode = new Toggle(header.node, 'mode');\n  const main = new Control(document.body, 'main', 'main');\n  const elem = new Menu(header.node, 'menu', 'menu__item menu__item--none', 'menu__item menu__item--selected');\n\n  const makeScore = (data) => {\n    const result = [];\n    data.forEach((el) => {\n      let temp = {};\n      el.data.forEach((item) => {\n        temp = {\n          enWord: item.enWord,\n          ruWord: item.ruWord,\n          category: el.category,\n          train: 0,\n          right: 0,\n          mistake: 0,\n          procent: 0,\n        };\n        result.push(temp);\n      });\n    });\n    return result;\n  };\n\n  const makeHard = (data, words) => {\n    const result = [];\n    let dataVal = [];\n    for (let i = 0; i < data.length; i += 1) {\n      dataVal.push(data[i].data);\n    }\n    dataVal = dataVal.flat();\n\n    words.forEach((el) => {\n      for (let i = 0; i < dataVal.length; i += 1) {\n        if (dataVal[i].enWord === el) {\n          result.push(dataVal[i]);\n        }\n      }\n    });\n    return result;\n  };\n\n  (get('score_mauta')) || set('score_mauta', makeScore(json));\n\n  const field = new Field(main.node, 'field', mode.isChecked);\n\n  elem.addItem('menu');\n  json.forEach((item) => elem.addItem(item.category, item.categoryImg));\n  elem.addItem('score');\n  elem.addItem('hard-words');\n\n  elem.onChange = (ind) => {\n    location.hash = elem.content[ind];\n  };\n\n  window.onpopstate = () => {\n    const categoryHash = location.hash.slice(1);\n    field.clear();\n    field.cards = [];\n    field.modeStatus = mode.isChecked;\n\n    switch (categoryHash) {\n      case 'menu':\n        for (let i = 0; i < json.length; i += 1) {\n          const data = [json[i].category, json[i].categoryImg];\n          new MenuCard(field.node, 'card', 'card2', data);\n        }\n        break;\n      case 'hard-words':\n        field.modeStatus = mode.isChecked;\n        const dashboardScore = get('score_mauta');\n        const wordsKeys = [];\n        const hardWords = dashboardScore.filter((item) => item.procent > 0 && item.procent < 100).sort(sortByKey('procent', false)).slice(0, COUNT_CARDS);\n        hardWords.forEach((item) => {\n          wordsKeys.push(item.enWord);\n        });\n        field.hardWords = makeHard(json, wordsKeys);\n        for (let i = 0; i < field.hardWords.length; i += 1) {\n          field.addItem(field.hardWords[i]);\n        }\n        if (mode.isChecked) {\n          field.playMode();\n        }\n        break;\n      case 'score':\n        new ScoreFeild(field);\n        break;\n      default:\n        const ourCategoryData = json.find((item) => categoryHash === item.category).data;\n        const cardsForTrain = ourCategoryData.sort(() => Math.random() - 0.5).slice(0, COUNT_CARDS);\n        for (let i = 0; i < cardsForTrain.length; i += 1) {\n          field.addItem(cardsForTrain[i]);\n        }\n        if (mode.isChecked) {\n          field.playMode();\n        }\n    }\n\n    let index;\n    for (let i = 0; i < elem.content.length; i += 1) {\n      if (elem.content[i] === categoryHash) {\n        index = i;\n      }\n    }\n    elem.select(index);\n  };\n\n  mode.node.addEventListener('click', () => {\n    window.onpopstate();\n  });\n\n  location.hash ? window.onpopstate() : elem.select(0);\n});\n","export default class Control {\n  constructor(parentNode, tag = 'div', className = '', content = '', bgrImg = 'none') {\n    this.node = document.createElement(tag);\n    this.node.className = className;\n    this.node.innerHTML = content;\n    // this.node.style.backgroundImage = bgrImg;\n    parentNode.appendChild(this.node);\n  }\n\n  clear() {\n    while (this.node.firstChild) {\n      this.node.lastChild.remove();\n    }\n  }\n}\n","export default function sortbyKey(key, direction = true) {\n  return (a, b) => ((direction) ? (a[key] >= b[key] ? 1 : -1) : (a[key] <= b[key] ? 1 : -1));\n};\n","export function set(name, value) {\n  window.localStorage.setItem(name, JSON.stringify(value));\n}\nexport function get(name, subst = null) {\n  return JSON.parse(window.localStorage.getItem(name) || subst);\n}\n\nexport function del(name) {\n  localStorage.removeItem(name);\n}\n"],"sourceRoot":""}